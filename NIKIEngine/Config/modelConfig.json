{
    "models": {
        "chatModel": {
            "description": "Natural language processing model for NIKI's chat interface.",
            "version": "1.2.0",
            "path": "./AI/models/chatModel",
            "inputShape": [ 1, 512 ],
            "outputShape": [ 1, 1024 ],
            "dependencies": {
                "framework": "TensorFlow.js",
                "preprocessing": "spaCy tokenizer"
            }
        },
        "predictionEngineModel": {
            "description": "AI model for optimizing shard placement, load balancing, and task scheduling.",
            "version": "2.0.1",
            "path": "./AI/models/predictionEngine",
            "inputShape": [ 1, 128 ],
            "outputShape": [ 1, 64 ],
            "dependencies": {
                "framework": "TensorFlow.js",
                "preprocessing": "custom scaler"
            }
        },
        "analyticsModel": {
            "description": "Model for analyzing usage patterns and generating system reports.",
            "version": "1.5.3",
            "path": "./Analytics/models/analyticsModel",
            "inputShape": [ 1, 256 ],
            "outputShape": [ 1, 128 ],
            "dependencies": {
                "framework": "PyTorch",
                "preprocessing": "numpy"
            }
        }
    },
    "defaultModel": "chatModel",
    "performance": {
        "maxInferenceTimeMs": 2000,
        "fallbackBehavior": "Use cached results if inference exceeds max time."
    },
    "logging": {
        "enabled": true,
        "logFilePath": "./Logs/modelUsage.log",
        "logLevel": "info"
    },
    "updateSettings": {
        "checkForUpdates": true,
        "updateUrl": "https://updates.atomic.ca/models",
        "autoUpdate": false,
        "lastChecked": "2024-11-24T12:00:00Z"
    },
    "errorHandling": {
        "onError": "fallback",
        "fallbackModel": "predictionEngineModel",
        "alertAdmin": true,
        "adminContact": "support@atomic.ca"
    }
}
